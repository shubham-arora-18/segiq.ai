services:
  traefik:
    image: traefik:v3.0
    container_name: segiq_traefik
    ports:
      - "${PORT:-80}:80"
    volumes:
      - ./traefik.yml:/etc/traefik/dynamic.yml.template:ro
    entrypoint: ["/bin/sh", "-c", "apk add --no-cache gettext && envsubst < /etc/traefik/dynamic.yml.template > /etc/traefik/dynamic.yml && exec traefik --providers.file.filename=/etc/traefik/dynamic.yml --providers.file.watch=true --entrypoints.web.address=:80 --log.level=INFO"]
    environment:
      - ACTIVE_ENV=${ACTIVE_ENV:-app_blue}
    depends_on:
      - app_blue
      - app_green
    restart: unless-stopped
    labels:
      - "service.type=load-balancer"

  app_blue:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: segiq_app_blue
    environment:
      - COLOR=blue
      - UVICORN_WORKERS=2
      - UVICORN_LOOP=uvloop
      - UVICORN_LIMIT_CONCURRENCY=7000
    restart: unless-stopped
    labels:
      - "deployment.color=blue"

  app_green:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: segiq_app_green
    environment:
      - COLOR=green
      - UVICORN_WORKERS=3
      - UVICORN_LOOP=uvloop
      - UVICORN_LIMIT_CONCURRENCY=7000
    restart: unless-stopped
    labels:
      - "deployment.color=green"

  prometheus:
    image: prom/prometheus:v2.45.0
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/alerts.yml:/etc/prometheus/alerts.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'

  grafana:
    image: grafana/grafana:10.0.0
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    volumes:
      - ./monitoring/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml:ro
      - ./monitoring/grafana/dashboard.yml:/etc/grafana/provisioning/dashboards/dashboard.yml:ro
      - ./monitoring/grafana/sigiq_dashboard.json:/var/lib/grafana/dashboards/sigiq_dashboard.json:ro

  redis:
    image: redis:7-alpine
    container_name: segiq_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 5s
      retries: 3
    restart: unless-stopped